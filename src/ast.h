#ifndef KMC_C89_COMPILER_AST_H
#define KMC_C89_COMPILER_AST_H

enum AstTag {
  AST_IDENTIFIER,
  AST_CONSTANT,
  AST_FLOATING_CONSTANT,
  AST_INTEGER_CONSTANT,
  AST_ENUMERATION_CONSTANT,
  AST_CHARACTER_CONSTANT,
  AST_STRING_LITERAL,
  AST_PRIMARY_EXPRESSION,
  AST_POSTFIX_EXPRESSION,
  AST_ARGUMENT_EXPRESSION_LIST,
  AST_UNARY_EXPRESSION,
  AST_UNARY_OPERATOR,
  AST_CAST_EXPRESSION,
  AST_MULTIPLICATIVE_EXPRESSION,
  AST_ADDITIVE_EXPRESSION,
  AST_SHIFT_EXPRESSION,
  AST_RELATIONAL_EXPRESSION,
  AST_EQUALITY_EXPRESSION,
  AST_AND_EXPRESSION,
  AST_EXCLUSIVE_OR_EXPRESSION,
  AST_INCLUSIVE_OR_EXPRESSION,
  AST_LOGICAL_AND_EXPRESSION,
  AST_LOGICAL_OR_EXPRESSION,
  AST_CONDITIONAL_EXPRESSION,
  AST_ASSIGNMENT_EXPRESSION,
  AST_ASSIGNMENT_OPERATOR,
  AST_EXPRESSION,
  AST_CONSTANT_EXPRESSION,
  AST_DECLARATION,
  AST_DECLARATION_SPECIFIERS,
  AST_INIT_DECLARATOR_LIST,
  AST_INIT_DECLARATOR,
  AST_STORAGE_CLASS_SPECIFIER,
  AST_TYPE_SPECIFIER,
  AST_STRUCT_OR_UNION_SPECIFIER,
  AST_STRUCT_OR_UNION,
  AST_STRUCT_DECLARATION_LIST,
  AST_STRUCT_DECLARATION,
  AST_SPECIFIER_QUALIFIER_LIST,
  AST_STRUCT_DECLARATOR_LIST,
  AST_STRUCT_DECLARATOR,
  AST_ENUM_SPECIFIER,
  AST_ENUMERATOR_LIST,
  AST_ENUMERATOR,
  AST_TYPE_QUALIFIER,
  AST_DECLARATOR,
  AST_DIRECT_DECLARATOR,
  AST_POINTER,
  AST_TYPE_QUALIFIER_LIST,
  AST_PARAMETER_TYPE_LIST,
  AST_PARAMETER_LIST,
  AST_PARAMETER_DECLARATION,
  AST_IDENTIFIER_LIST,
  AST_TYPE_NAME,
  AST_ABSTRACT_DECLARATOR,
  AST_DIRECT_ABSTRACT_DECLARATOR,
  AST_TYPEDEF_NAME,
  AST_INITIALIZER,
  AST_INITIALIZER_LIST,
  AST_STATEMENT,
  AST_LABELED_STATEMENT,
  AST_COMPOUND_STATEMENT,
  AST_DECLARATION_LIST,
  AST_STATEMENT_LIST,
  AST_EXPRESSION_STATEMENT,
  AST_SELECTION_STATEMENT,
  AST_ITERATION_STATEMENT,
  AST_JUMP_STATEMENT,
  AST_TRANSLATION_UNIT,
  AST_EXTERNAL_DECLARATION,
  AST_FUNCTION_DEFINITION,
  AST_TAG_ENUM_END
};

typedef struct Ast* AstRef;

#endif  /* KMC_C89_COMPILER_AST_H */
